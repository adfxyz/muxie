name: CI

on:
  push:
    branches: [ '**' ]
    tags:
      - 'v*.*.*'
      - 'v*.*.*-*'
  pull_request:
    branches: [ '**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  rust-ci:
    name: Rust fmt, clippy, build, test
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Cargo fmt (check)
        run: cargo fmt --all -- --check

      - name: Clippy (deny warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build (debug)
        run: cargo build --all-targets --verbose

      - name: Build (release)
        run: cargo build --release --verbose

      - name: Test
        run: cargo test --all --quiet

  deb-package:
    name: Build and test DEB package (temporary on push/PR)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-deb
        run: cargo install cargo-deb

      - name: Build .deb (no default features)
        run: |
          set -euo pipefail
          cargo deb --locked --no-default-features --verbose
          mkdir -p ci-debs
          deb_file=$(find target -type f -path "*/debian/*.deb" | head -n1)
          if [ -z "${deb_file:-}" ]; then
            echo "No .deb found under target/**/debian" >&2
            exit 2
          fi
          cp -v "$deb_file" ci-debs/
          echo "deb_file=$deb_file" >> $GITHUB_OUTPUT

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: muxie-deb
          path: ci-debs/*.deb
          if-no-files-found: error

      - name: Smoke test in Ubuntu container
        run: |
          set -euo pipefail
          docker run --rm \
            -v "$PWD/ci-debs:/debs:ro" \
            -v "$PWD/scripts/smoke:/test:ro" \
            ubuntu:24.04 \
            bash -lc "bash /test/deb-smoke.sh"

  rpm-package:
    name: Build and test RPM package (temporary on push/PR)
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-generate-rpm
        run: cargo install cargo-generate-rpm

      - name: Build release (no default features)
        run: |
          set -euo pipefail
          cargo build --release --no-default-features --verbose

      - name: Generate RPM
        run: |
          set -euo pipefail
          cargo generate-rpm
          mkdir -p ci-rpms
          rpm_file=$(find target -type f -path "*/generate-rpm/*.rpm" | head -n1)
          if [ -z "${rpm_file:-}" ]; then
            echo "No .rpm found under target/**/generate-rpm" >&2
            exit 2
          fi
          cp -v "$rpm_file" ci-rpms/
          echo "rpm_file=$rpm_file" >> $GITHUB_OUTPUT

      - name: Upload .rpm artifact
        uses: actions/upload-artifact@v4
        with:
          name: muxie-rpm
          path: ci-rpms/*.rpm
          if-no-files-found: error

      - name: Smoke test in Fedora container
        run: |
          set -euo pipefail
          docker run --rm \
            -v "$PWD/ci-rpms:/rpms:ro" \
            -v "$PWD/scripts/smoke:/test:ro" \
            fedora:40 \
            bash -lc "bash /test/rpm-smoke.sh"

  release:
    name: Publish GitHub Release (tags only)
    runs-on: ubuntu-latest
    needs: [deb-package, rpm-package]
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download .deb artifact
        uses: actions/download-artifact@v4
        with:
          name: muxie-deb
          path: dist

      - name: Download .rpm artifact
        uses: actions/download-artifact@v4
        with:
          name: muxie-rpm
          path: dist

      - name: Generate checksums
        run: |
          set -euo pipefail
          shopt -s nullglob
          files=(dist/*.deb dist/*.rpm)
          if [ ${#files[@]} -eq 0 ]; then
            echo "No package files to checksum" >&2
            exit 1
          fi
          sha256sum "${files[@]}" | tee dist/sha256sum.txt

      - name: Prepare release notes (any tag)
        run: |
          set -euo pipefail
          mkdir -p dist
          tag="${GITHUB_REF#refs/tags/}"
          version_no_v="${tag#v}"
          # Extract the matching section from CHANGES.md (from heading to before next heading)
          awk -v v="$version_no_v" \
            'BEGIN{p=0}
             /^## /{ if(p){ exit } }
             $0 ~ "^##[[:space:]]+" v { p=1 }
             { if(p) print }' CHANGES.md > dist/RELEASE_NOTES.md || true
          # Ensure file exists even if empty
          : > dist/RELEASE_NOTES.md

      - name: Create Draft Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ contains(github.ref_name, '-') }}
          draft: true
          body_path: dist/RELEASE_NOTES.md
          files: |
            dist/*.deb
            dist/*.rpm
            dist/sha256sum.txt
